{namespace BaseDatalist}

{template .render}
	{@param? formId: string}
	{@param name: string}
	{@param? stringifiedSelected: string}
	{@param? id: string}
	{@param? _filteredValues: ?}
	{@param? data: ?}
	{@param? label: string}
	{@param spritemap: string}
	{@param? multiselect: bool}
	{@param? addedData: ?}
	{@param? query: ?}
	{@param? dropdownVisibilityState: string}
	{@param? additionalClasses: string}

	{let $inputId kind="text"}
		commerce-datalist-
		{if isNonnull($formId)}
			{$formId}-{$name}
		{else}
			{$name}
		{/if}
	{/let}

	{let $containerClasses kind="text"}
		commerce-datalist
		{if isNonnull($additionalClasses)}
			{sp}{$additionalClasses}
		{/if}
	{/let}

	{let $inputWrapperClasses kind="text"}
		commerce-datalist__input-wrapper
		{if $dropdownVisibilityState}
			{sp}is-{$dropdownVisibilityState}
		{/if}
	{/let}

	{let $containerAttributes kind="attributes"}
		{if $id}
			id="{$id}" 
		{/if}
		class="{$containerClasses}"
	{/let}

	<div {$containerAttributes}>

		<input 
			ref="input"
			type="hidden"
			name="{$name}"
			data-operation="contains"
			value="{$stringifiedSelected}" 
		/> 

		{if isNonnull($label)}
			<label
				for="{$inputId}"
				class="commerce-modal__label"
			>
				{$label}
			</label>
		{/if}

		<div 
			class="{$inputWrapperClasses}"
			data-onclick="_handleInputWrapperClick"
		>
			<div class="commerce-datalist__mask">
				<div 
					class="commerce-datalist__query-wrapper"
					ref="queryWrapper"
				>
					{if $multiselect and isNonnull($addedData)}
						{call .addedValues}
							{param values: $addedData /}
							{param spritemap: $spritemap /}
						{/call}
					{/if}
					<input 
						class="commerce-datalist__query-input"
						data-onkeyup="_handleInputKeyup"
						id="{$inputId}"
						ref="inputText"
						autocomplete="off" 
						placeholder="search..."
						{if not $multiselect and $addedData and $addedData.label}
							value="{$addedData.label}"
						{else}
							value=""
						{/if}
						type="text"
					/>
				</div>
			</div>
			<span class="commerce-datalist__icon-wrapper">
				<button 
					class="commerce-datalist__icon commerce-datalist__icon--reset"
					data-onclick="_handleResetButtonClick"
				>
					{call ClayIcon.render}
						{param spritemap: $spritemap /}
						{param symbol: 'reset' /}
					{/call}
				</button>
				<span class="commerce-datalist__icon commerce-datalist__icon--default">
					{call ClayIcon.render}
						{param spritemap: $spritemap /}
						{param symbol: 'chevron' /}
					{/call}
				</span>
			</span>
		</div>

		{let $dropdownClasses kind="text"}
			commerce-datalist__dropdown
			{if $dropdownVisibilityState}
				{sp}is-{$dropdownVisibilityState}
			{/if}
		{/let}

		<div class="{$dropdownClasses}">
			{call .dataTemplate}
				{param data: $data /}
				{param filteredValues: $_filteredValues /}
				{param name: $name /}
				{param selectedValue: $addedData /}
				{param query: $query /}
				{param multiselect: $multiselect /}
			{/call}
		</div>
	</div>
{/template}

{template .addedValues}
	{@param values: list<[
		label: string|number,
		value: string|number
	]>}
	{@param spritemap: string}

	<div class="commerce-datalist__values">
		{foreach $selectedElement in $values}
			<span class="commerce-datalist__value">
				{$selectedElement.label}
				<button 
					type="button" 
					class="commerce-datalist__delete-value"
					data-onclick="_handleDeleteElement"
					data-value="{$selectedElement.value}"
				>
					{call ClayIcon.render}
						{param spritemap: $spritemap /}
						{param symbol: 'close' /}
					{/call}
				</button>
			</span>
		{/foreach}
	</div>
{/template}

{template .dataTemplate}
	{@param? data: list<[
		label: string|number,
		value: string|number
	]>}
	{@param? filteredValues: list<string|number>}
	{@param? selectedValue: ?}
	{@param name: string}
	{@param? query: string}
	{@param? multiselect: bool}

	{let $dataElementVariant: $multiselect ? 'multiselect' : '' /}

	{let $emptyLabelMessage kind="text"}
		{msg desc="None"}none{/msg}
	{/let}

	<div class="commerce-datalist__data">
		{if 
			isNonnull($query) and $query != '' and 
			isNonnull($data) and length($data) > 0 and 
			isNonnull($filteredValues)
		}
			{if length($filteredValues) > 0 }
				{if ($multiselect) == false}
					{delcall Datalist.DataElement variant="$dataElementVariant"}
						{param label: $emptyLabelMessage /}
					{/delcall}
				{/if}
				{foreach $filteredValue in $filteredValues}
					{foreach $dataElement in $data}
						{if $filteredValue == $dataElement.value}
							{delcall Datalist.DataElement variant="$dataElementVariant"}
								{param value: $dataElement.value /}
								{param label: $dataElement.label /}
								{param query: $query /}
								{param name: $name /}
								{param selectedValue: $selectedValue /}
							{/delcall}
						{/if}
					{/foreach}
				{/foreach}
			{else}
				{call .empty /}
			{/if}
		{else}
			{if isNonnull($data) and length($data) > 0}
				{if ($multiselect) == false}
					{delcall Datalist.DataElement variant="$dataElementVariant"}
						{param label: $emptyLabelMessage /}
					{/delcall}
				{/if}
				{foreach $dataElement in $data}
					{delcall Datalist.DataElement variant="$dataElementVariant"}
						{param value: $dataElement.value /}
						{param label: $dataElement.label /}
						{param query: $query /}
						{param name: $name /}
						{param selectedValue: $selectedValue /}
					{/delcall}
				{/foreach}
			{else}
				{call .empty /}
			{/if}
		{/if}
	</div>
{/template}

{deltemplate Datalist.DataElement variant="'multiselect'"}
	{@param? value: string|number}
	{@param? label: string|number}
	{@param? query: string}
	{@param? name: string}
	{@param? selectedValue: list<[
		value: string|number
	]>}

	{if $value and $label and $name}
		{let $inputId kind="text"}
			{$name}-{$value}
		{/let}

		<label
			class="commerce-datalist__option commerce-datalist__option--label"
			for="{$inputId}"
		>
			<input
			
				id="{$inputId}"
				type="checkbox"
				data-onchange="_handleSelectData"
				data-value="{$value}"
				autocomplete="off"
				{if isNonnull($selectedValue)}
					{foreach $currentSelected in $selectedValue}
						{if $currentSelected.value == $value}
							checked
						{/if}
					{/foreach}
				{/if}
			/>
			{call AutocompleteItem.render}
				{param text: $label /}
				{param query: $query /}
			{/call}
		</label>
	{/if}
{/deltemplate}

{deltemplate Datalist.DataElement}
	{@param? value: string|number}
	{@param? label: string|number}
	{@param? query: string}
	{@param? selectedValue: [
		value: string|number
	]}

	{let $dataElementClasses kind="text"}
		commerce-datalist__option commerce-datalist__option--select
		{if isNonnull($selectedValue) and $selectedValue.value == $value}
			{sp}commerce-datalist__option--active
		{/if}
	{/let}
	{let $formattedValue kind="text"}
		{if $value}
			{$value}
		{else}
			{nil}
		{/if}
	{/let}
	<div 
		class="{$dataElementClasses}" 
		data-value="{$formattedValue}" 
		data-onclick="_handleSelectData"
	>
		{if $label}
			{call AutocompleteItem.render}
				{param text: $label /}
				{param query: $query /}
			{/call}
		{/if}
	</div>
{/deltemplate}

{template .empty}
	<div class="commerce-datalist__option commerce-datalist__option--empty">
		{msg desc="No results found"}no-results-found{/msg}
	</div>
{/template}